appName: dropwizard-demo
template: Hello, %s!

server:
  adminConnectors:
    - type: http
      port: 8082
      bindHost: 127.0.0.1 # only bind to loopback
      headerCacheSize: 512 bytes
      outputBufferSize: 32KiB
      maxRequestHeaderSize: 8KiB
      maxResponseHeaderSize: 8KiB
      inputBufferSize: 8KiB
      idleTimeout: 30 seconds
      minBufferPoolSize: 64 bytes
      bufferPoolIncrement: 1KiB
      maxBufferPoolSize: 64KiB
      acceptorThreads: 1
      selectorThreads: 2
      acceptQueueSize: 1024
      reuseAddress: true
      soLingerTime: 345s
      useServerHeader: false
      useDateHeader: true
      useForwardedHeaders: true
#  applicationConnectors:
#    - type: https
#      port: 8445
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false

# Database settings.

database:

    driverClass: com.mysql.cj.jdbc.Driver
    user: root
    password: mundio
    url: jdbc:mysql://localhost/peoples
#database:

  # the name of your JDBC driver
  #driverClass: org.h2.Driver

  # the username
  #user: sa

  # the password
  #password: sa

  # the JDBC URL
  #url: jdbc:h2:./target/example

# use the simple server factory if you only want to run on a single port
#server:
#  type: simple
#  connector:
#    type: http
#    port: 8080

#server:
#  softNofileLimit: 1000
#  hardNofileLimit: 1000
  #applicationConnectors:
    #- type: http
    #  port: 8080
    #- type: https
    #  port: 8443
      #keyStorePath: example.keystore
      #keyStorePassword: example
      #validateCerts: false
      #validatePeers: false
    #this requires the alpn-boot library on the JVM's boot classpath
    #- type: h2
    #  port: 8445
    #  keyStorePath: example.keystore
    #  keyStorePassword: example
    #  validateCerts: false
    #  validatePeers: false
  #adminConnectors:
    #- type: http
    #  port: 8081
    #- type: https
    #  port: 8444
      #keyStorePath: example.keystore
      #keyStorePassword: example
      #validateCerts: false
      #validatePeers: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.dastan: DEBUG

    # Redirects SQL logs to a separate file
    org.hibernate.SQL:
      level: DEBUG

# Logback's Time Based Rolling Policy - archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}.log.gz
# Logback's Size and Time Based Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
# Logback's Fixed Window Rolling Policy -  archivedLogFilenamePattern: /tmp/application-%i.log.gz

  appenders:
    - type: console
    - type: file
      threshold: INFO
      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      currentLogFilename: /tmp/application.log
      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 10MB

# the key needs to match the suffix of the renderer
#viewRendererConfiguration:
    #.ftl:
        #strict_syntax: yes
        #whitespace_stripping: yes

#metrics:
#  reporters:
    #- type: graphite
      #host: localhost
      #port: 2003
      #prefix: example
#frequency: 10s